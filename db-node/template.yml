AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Indigo

  Sample SAM Template for Indigo
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Parameters:
  DynamoTableName:
    Type: String
    Description: The name of the DynamoDB table backing the application
    Default: 'Indigo'

Resources:
  # IndigoDWH:
  #   Type: AWS::Redshift::Cluster
  #   Properties:
  #     TableName: !Ref TABLENAME
  #     AttributeDefinitions:
  #       - AttributeName: PK
  #         AttributeType: S
  # IndigoDynamoTable:
  #   Type: AWS::DynamoDB::Table
  #   Properties:
  #     TableName: !Ref DynamoTableName
  #     BillingMode: PAY_PER_REQUEST
  #     AttributeDefinitions:
  #       AttributeName: PK
  #       AttributeType: S
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: build/api
      Handler: app.helloWorldHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get
  GetDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build
      Handler: app.getDataHandler
      Runtime: nodejs12.x
      Timeout: 30
      Events:
        GetData:
          Type: Api
          Properties:
            Path: /api/get-data
            Method: get
      Policies: arn:aws:iam::aws:policy/AmazonRedshiftFullAccess
  PollContractEvents:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build
      Handler: pollEvents.pollContractEvents
      Runtime: nodejs12.x
      Timeout: 30
      Policies: [arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess, arn:aws:iam::aws:policy/AmazonS3FullAccess]
      Events: 
        CWSchedule:
          Type: Schedule
          Properties:
            Schedule: 'rate(1 minute)'
            Name: PollEventsSchedule
            Enabled: true
  DBT:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build
      Handler: pollEvents.invokeDBTLambdaTest
      Runtime: nodejs12.x


Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
